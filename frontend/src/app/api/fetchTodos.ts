/**
 * Generated by orval v7.3.0 🍺
 * Do not edit manually.
 * Todo API
 * Todo アプリケーションのAPI仕様
 * OpenAPI spec version: 1.0.0
 */
import { customFetch } from "../../lib/customFetch";
export type EditTodoBody = {
	/** 完了状態 */
	completed?: boolean;
	/** 更新するTodoのタイトル */
	title?: string;
};

export type CreateTodoBody = {
	/** Todoのタイトル */
	title: string;
};

export interface Todo {
	/** Todoの完了状態 */
	completed: boolean;
	/** 作成日時 */
	createdAt: string;
	/**
	 * 論理削除日時（nullの場合は未削除）
	 * @nullable
	 */
	deletedAt?: string | null;
	/** TodoのユニークID（自動採番） */
	id: number;
	/** Todoのタイトル */
	title: string;
	/** 更新日時 */
	updatedAt: string;
}

/**
 * 論理削除されていない全てのTodoアイテムを取得します
 * @summary Todo一覧の取得
 */
export const getAllTodos = () => {
	return customFetch<Todo[]>({ url: `/api/todos`, method: "GET" });
};

/**
 * 新しいTodoアイテムを作成します
 * @summary 新規Todoの作成
 */
export const createTodo = (createTodoBody: CreateTodoBody) => {
	return customFetch<Todo>({
		url: `/api/todos`,
		method: "POST",
		headers: { "Content-Type": "application/json" },
		data: createTodoBody,
	});
};

/**
 * 指定されたIDのTodoを更新します
 * @summary Todoの更新
 */
export const editTodo = (id: number, editTodoBody: EditTodoBody) => {
	return customFetch<Todo>({
		url: `/api/todos/${id}`,
		method: "PUT",
		headers: { "Content-Type": "application/json" },
		data: editTodoBody,
	});
};

/**
 * 指定されたIDのTodoを論理削除します
 * @summary Todoの削除
 */
export const deleteTodo = (id: number) => {
	return customFetch<Todo>({ url: `/api/todos/delete/${id}`, method: "PUT" });
};

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export type GetAllTodosResult = NonNullable<
	Awaited<ReturnType<typeof getAllTodos>>
>;
export type CreateTodoResult = NonNullable<
	Awaited<ReturnType<typeof createTodo>>
>;
export type EditTodoResult = NonNullable<Awaited<ReturnType<typeof editTodo>>>;
export type DeleteTodoResult = NonNullable<
	Awaited<ReturnType<typeof deleteTodo>>
>;
